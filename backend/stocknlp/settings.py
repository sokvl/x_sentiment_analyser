from __future__ import annotations

import os
from pathlib import Path

from decouple import Config
from decouple import config
from decouple import RepositoryEnv
from dotenv import load_dotenv
"""
Django settings for stocknlp project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'unsafe-secret-key')

# DEBUG controlled via env var DJANGO_DEBUG (default False)
DEBUG = os.getenv('DJANGO_DEBUG', 'False').lower() in ['1', 'true', 'yes']

# Allowed hosts from comma-separated env var, default to localhost only in dev
ALLOWED_HOSTS = os.getenv(
    'DJANGO_ALLOWED_HOSTS',
    'localhost,127.0.0.1',
).split(',')

# CORS settings – allow explicit origins only
CORS_ALLOWED_ORIGINS = [
    origin.strip() for origin in os.getenv(
        'DJANGO_CORS_ALLOWED_ORIGINS', '',
    ).split(',') if origin
]

# Trust same list for CSRF
CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # internal
    'stocknlp',
    # 'scraper',
    'tickers',
    'signals',
    # internal_cfg
    'scraper.apps.ScraperConfig',
    # External apps
    'django_rq',
    'rest_framework',
    'django_filters',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stocknlp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stocknlp.wsgi.application'

# EXTERNAL
RQ_QUEUES = {
    'scraper_queue': {
        'HOST': os.getenv('REDIS_HOST'),
        'PORT': os.getenv('REDIS_PORT'),
        'DB': 0,
        'DEFAULT_TIMEOUT': 360,  # 6 minut
    },
    'user_queue': {
        'HOST': os.getenv('REDIS_HOST'),
        'PORT': os.getenv('REDIS_PORT'),
        'DB': 0,
        'DEFAULT_TIMEOUT': 360,  # 6 minut
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST':  os.getenv('POSTGRES_HOST'),
        'PORT': os.getenv('POSTGRES_PORT'),
    },
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # Pozostaw istniejące loggery włączone
    'formatters': {
        'verbose': {
            'format': '[{asctime}] {levelname} {name}: {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',  # Użyj formattera 'verbose' dla szczegółowych logów
        },
    },
    'loggers': {
        'signals.views': {  # Upewnij się, że nazwa loggera odpowiada ścieżce do Twojego widoku
            'handlers': ['console'],
            'level': 'DEBUG',  # Ustaw poziom logowania na DEBUG, aby widzieć wszystkie logi
            'propagate': False,
        },
        '': {  # Root logger
            'handlers': ['console'],
            'level': 'WARNING',  # Ustaw poziom na WARNING dla wszystkich innych loggerów
        },
    },
}
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MODEL_WEIGHTS_PATH = BASE_DIR / 'models' / 'best_model.pth'
MODEL_PARAMS_PATH = BASE_DIR / 'models' / 'params' / 'best_params.json'
WORD_TO_INDEX_PATH = BASE_DIR / 'models' / 'word_to_index.json'
TICKER_TO_INDEX_PATH = BASE_DIR / 'models' / 'ticker_to_index.json'

DEFAULT_MODEL = 'transformer_finbert'

# Django REST Framework security defaults
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter',
    ],
}

logger.debug(
    'LSTM_MODEL_MANAGER initialized: %s',
    self.LSTM_MODEL_MANAGER,
)
